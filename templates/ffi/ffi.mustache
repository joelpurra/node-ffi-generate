/*
 * This file was generated by {{metadata.generator.name}} v{{metadata.generator.version}} ({{metadata.generator.git.describe}} on {{metadata.generator.git.branch}}).
 * {{metadata.generator.homepage}}
 */



const FFI = require("ffi-napi");
const ref = require("ref-napi");
const ArrayType = require("ref-array-di")(ref);
const Struct = require("ref-struct-di")(ref);
const Union = require("ref-union-di")(ref);

const voidPtr = ref.refType(ref.types.void);

const constants = {
{{#sorted.enums}}
  "{{name}}": {
    {{#values}}
      {{name}}: {{value}},
    {{/values}}
    {{#values}}
      "{{value}}": "{{name}}",
    {{/values}}
  },
{{/sorted.enums}}
};

// NOTE: defining individual types as "global" constants to be able to reference them without any prefix.
{{#types}}
const {{name}} = {{type}};
const {{name}}Ptr = ref.refType({{name}});
{{/types}}

const types = {
{{#sorted.types}}
  {{name}},
  {{name}}Ptr,
{{/sorted.types}}
};

const functions = new FFI.Library({{{library}}}, {
{{#sorted.functions}}
  {{name}}: [{{result}}, [
  {{#args}}
    {{name}},
  {{/args}}
  ]],
{{/sorted.functions}}
});

module.exports = {
  constants,
  types,
  functions,
};
